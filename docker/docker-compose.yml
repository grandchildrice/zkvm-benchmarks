version: '3.8'

services:
  base:
    build:
      context: ..
      dockerfile: docker/Dockerfile.base
    image: zkvm-benchmarks-base
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  jolt:
    build:
      context: ..
      dockerfile: docker/Dockerfile.jolt
    volumes:
      - ../.outputs:/root/workspace/.outputs
    depends_on:
      base:
        condition: service_completed_successfully
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  jolt-gpu:
    build:
      context: ..
      dockerfile: docker/Dockerfile.jolt
    volumes:
      - ../.outputs:/root/workspace/.outputs
    depends_on:
      base:
        condition: service_completed_successfully
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: >
      bash -c "
      ICICLE_BACKEND_INSTALL_DIR=\$$(pwd)/target/release/deps/icicle/lib/backend RUSTFLAGS='-C target-cpu=native' cargo run --release --bin fibonacci -F icicle &&
      ICICLE_BACKEND_INSTALL_DIR=\$$(pwd)/target/release/deps/icicle/lib/backend RUSTFLAGS='-C target-cpu=native' cargo run --release --bin sha2 -F icicle &&
      ICICLE_BACKEND_INSTALL_DIR=\$$(pwd)/target/release/deps/icicle/lib/backend RUSTFLAGS='-C target-cpu=native' cargo run --release --bin ecdsa -F icicle &&
      ICICLE_BACKEND_INSTALL_DIR=\$$(pwd)/target/release/deps/icicle/lib/backend RUSTFLAGS='-C target-cpu=native' cargo run --release --bin transfer-eth -F icicle
      "

  nexus:
    build:
      context: ..
      dockerfile: docker/Dockerfile.nexus
    volumes:
      - ../.outputs:/root/workspace/.outputs
    depends_on:
      base:
        condition: service_completed_successfully

  openvm:
    build:
      context: ..
      dockerfile: docker/Dockerfile.openvm
    volumes:
      - ../.outputs:/root/workspace/.outputs
    depends_on:
      base:
        condition: service_completed_successfully

  pico:
    build:
      context: ..
      dockerfile: docker/Dockerfile.pico
    volumes:
      - ../.outputs:/root/workspace/.outputs
    depends_on:
      base:
        condition: service_completed_successfully

  risczero:
    build:
      context: ..
      dockerfile: docker/Dockerfile.risczero
    volumes:
      - ../.outputs:/root/workspace/.outputs
    depends_on:
      base:
        condition: service_completed_successfully
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  risczero-gpu:
    build:
      context: ..
      dockerfile: docker/Dockerfile.risczero
    volumes:
      - ../.outputs:/root/workspace/.outputs
      - /usr/local/cuda:/usr/local/cuda
    depends_on:
      base:
        condition: service_completed_successfully
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: >
      bash -c "
      RUSTFLAGS='-C target-cpu=native' cargo run --release -F cuda --bin fibonacci &&
      RUSTFLAGS='-C target-cpu=native' cargo run --release -F cuda --bin sha2 &&
      RUSTFLAGS='-C target-cpu=native' cargo run --release -F cuda --bin ecdsa &&
      RUSTFLAGS='-C target-cpu=native' cargo run --release -F cuda --bin transfer-eth
      "

  sp1:
    build:
      context: ..
      dockerfile: docker/Dockerfile.sp1
    volumes:
      - ../.outputs:/root/workspace/.outputs
    depends_on:
      base:
        condition: service_completed_successfully
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  sp1-gpu:
    build:
      context: ..
      dockerfile: docker/Dockerfile.sp1
    volumes:
      - ../.outputs:/root/workspace/.outputs
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - /usr/local/cuda:/usr/local/cuda
      - /usr/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu-host
    depends_on:
      base:
        condition: service_completed_successfully
    network_mode: "host"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    privileged: true
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SP1_CUDA_CONTAINER_RUNTIME=nvidia
      - SP1_CUDA_SERVER_TIMEOUT=300
      - SP1_CUDA_SERVER_HOST=0.0.0.0
      - SP1_CUDA_NVCC_ARGS="-gencode arch=compute_75,code=sm_75"
      - SP1_CUDA_USE_HOST_MEMORY=true
    command: >
      bash -c "
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin fib -- --n 10 &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin fib -- --n 100 &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin fib -- --n 1000 &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin fib -- --n 10000 &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin fib -- --n 100000 &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin sha2 -- --n 32 &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin sha2 -- --n 256 &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin sha2 -- --n 512 &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin sha2 -- --n 1024 &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin sha2 -- --n 2048 &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin ecdsa &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin transfer-eth -- --n 1 &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin transfer-eth -- --n 10 &&
      RUST_BACKTRACE=full SP1_PROVER=cuda RUSTFLAGS='-C target-cpu=native' cargo run --release -p host --bin transfer-eth -- --n 100
      "

  zkm:
    build:
      context: ..
      dockerfile: docker/Dockerfile.zkm
    volumes:
      - ../.outputs:/root/workspace/.outputs
    depends_on:
      base:
        condition: service_completed_successfully